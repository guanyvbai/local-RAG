# docker-compose.yml (V1.3 - 离线简化版)


services:
  backend:
    image: local-rag-0825-backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: rag_backend
    ports:
      - "8000:8000"
    volumes:
      - ./app_data:/app/data
      - ./models/reranker:/app/models/reranker
      - ./flashrank_cache:/root/.cache/flashrank/models/ms-marco-MiniLM-L-12-v2
      - ./models/cross-encoder:/app/models/cross-encoder
    env_file:
      - .env
    networks:
      - rag_network
    restart: always
    depends_on:
      qdrant:
        condition: service_started
      ollama:
        condition: service_healthy

  qdrant:
    image: qdrant/qdrant:v1.9.1
    container_name: rag_qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - rag_network
    restart: always

  ollama:
    image: ollama/ollama
    container_name: rag_ollama
    ports:
      - "11434:11434"
    env_file:
      - .env   
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rag_network
    restart: always
    healthcheck:
      test: ["CMD", "ollama", "ps"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    env_file:
      - .env   
    depends_on:
      - mysql
      - backend
    ports:
      - "5678:5678"
    volumes:
      - ./editor-ui-dist/dist:/usr/local/lib/node_modules/n8n/node_modules/n8n-editor-ui/dist  
      - n8n_data:/home/node/.n8n
    networks:
      - rag_network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - rag_network

networks:
  rag_network:
    driver: bridge

volumes:
  qdrant_storage:
  ollama_data:
  n8n_data:
  mysql_data: