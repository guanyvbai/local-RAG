# docker-compose.yml (已根据 .env 文件进行优化)
version: '3.8'

services:
  backend:
    image: local-rag-0825-backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: rag_backend
    ports:
      - "8000:8000"
    volumes:
      - app_data:/app/data
    env_file:
      - .env
    environment: {}
    networks:
      - rag_network
    restart: always
    depends_on:
      qdrant:
        condition: service_started
      ollama:
        condition: service_healthy

  qdrant:
    image: qdrant/qdrant:v1.9.1
    container_name: rag_qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - rag_network
    restart: always

  ollama-setup:
    image: ollama/ollama
    container_name: rag_ollama_setup
    entrypoint: /bin/sh
    command: -c "ollama serve & sleep 10 && ollama pull $$LLM_MODEL && ollama pull $$EMBEDDING_MODEL && kill $$(ps | grep 'ollama' | awk '{print $$1}')"
    env_file:
      - .env
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rag_network
    
  ollama:
    image: ollama/ollama
    container_name: rag_ollama
    ports:
      - "11434:11434"
    env_file:
      - .env   
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rag_network
    depends_on:
      ollama-setup:
        condition: service_completed_successfully
    restart: always
    healthcheck:
      test: ["CMD", "ollama", "ps"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    env_file:
      - .env   
    depends_on:
      - mysql
      - backend
      - mysql_mcp
    ports:
      - "5678:5678"
    volumes:
      - ./editor-ui-dist/dist:/usr/local/lib/node_modules/n8n/node_modules/n8n-editor-ui/dist  
      - n8n_data:/home/node/.n8n
    networks:
      - rag_network


  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - rag_network

  # === 新增 MCP 服务 ===
  mysql_mcp:
    image: local-rag-0825-mysql_mcp 
    build: ./mysql_mcp          # MCP 源码目录（包含 Dockerfile）
    container_name: mysql_mcp_service
    restart: always
    ports:
      - "3101:3101"       # MCP SSE/HTTP 服务端口
    networks:
      - rag_network
    env_file:
      - .env              # 如果 MCP 里需要数据库连接等配置

networks:
  rag_network:
    driver: bridge

volumes:
  app_data:
  qdrant_storage:
  ollama_data:
  n8n_data:
  mysql_data:
